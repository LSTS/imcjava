<project name="IMCJava" default="dist">
	
	<target name="all" depends="update-msg-defs,generated,dist" />

	<target name="scminfo" depends="gitinfo"/>
	
	<target name="svninfo">
		<exec executable="svn" dir=".">
			<arg value="up" />
		</exec>
				
		<exec executable="svn" dir="." output="svninfo.xml">
			<arg value="info" />
			<arg value="--xml" />
		</exec>
		
		<xmlproperty file="svninfo.xml" collapseattributes="true" />	
		
		<property name="scm.revision" value="${info.entry.commit.revision}" />
		<property name="scm.tag" value="${scm.revision}" />
	</target>
	
	<target name="gitinfo" >
	    <exec executable="git" outputproperty="git.tagstring" failonerror="false">
	      <arg value="describe"/>
	    </exec>
	    <exec executable="git" outputproperty="scm.revision">
	      <arg value="rev-parse"/>
	      <arg value="HEAD"/>
	    </exec>
		<condition property="scm.tag" value="${scm.revision}" else="${git.tagstring}">
		    <equals arg1="${git.tagstring}" arg2="fatal: No names found, cannot describe anything."/>
		</condition>
		
	  </target>		
		
	<target name="compile">
		<mkdir dir="build"/>
		<delete dir="build"/>
		<mkdir dir="build"/>
		<copy todir="build">
			<fileset dir="src" includes="**/*.xml"/>
			<fileset dir="src" includes="**/*.png"/>			
		</copy>
		<javac encoding="UTF-8" srcdir="src;src-generated"  destdir="build" target="1.5" source="1.5" includes="**/*.java" fork="false">     
		</javac>
		<javac encoding="UTF-8" srcdir="src-merge" destdir="build" target="1.5" source="1.5" includes="**/*.java" fork="false">     
		</javac>
	</target>	
	
	<target name="compile-all" depends="compile, compile-sniffer, compile-teleop, compile-preview, compile-kraken, compile-agents">
		<javac encoding="UTF-8" srcdir="src-sniffer" destdir="build" target="1.5" source="1.5" includes="**/*.java" fork="false">     
		</javac>
		<copy todir="build">
			<fileset dir="src" includes="**/*.xml"/>
			<fileset dir="src" includes="**/*.png"/>			
		</copy>
	</target>
	
	<target name="compile-sniffer" depends="compile">
		<mkdir dir="build"/>
		<copy todir="build">
			<fileset dir="src-sniffer" includes="**/*.png"/>
		</copy>
		<javac encoding="UTF-8" srcdir="src-sniffer" destdir="build" target="1.5" source="1.5" includes="**/*.java" fork="false" classpath="lib/jchart2d-3.2.0.jar">      
		</javac>
	</target>
	
	<target name="compile-preview" depends="compile">
			<javac encoding="UTF-8" srcdir="src-lsfpreview" destdir="build" target="1.5" source="1.5" includes="**/*.java" fork="false" classpath="lib/jchart2d-3.2.0.jar">      
			</javac>
	</target>
	
	<target name="compile-agents" depends="compile">
		<javac encoding="UTF-8" srcdir="src-agents" destdir="build" target="1.5" source="1.5" includes="**/*.java" fork="false" classpath="lib/js.jar;lib/guava-13.0.1.jar">      
		</javac>
	</target>
		

	<target name="sniffer-jar" depends="compile-sniffer">
		<delete file="dist/sniffer.jar"/>
		<unjar src="lib/jchart2d-3.2.0.jar" dest="build"/>
		<jar destfile="dist/sniffer.jar" basedir="build" index="true">
			<manifest>
				<attribute name="Main-Class" value="pt.up.fe.dceg.neptus.imc.sniffer.IMCMessageSniffer"/>
			</manifest>
		</jar>
		<echo message="The file 'dist/sniffer.jar' was generated"/>
	</target>
	
	<target name="teleop-jar" depends="compile-teleop">
		<delete file="dist/teleop.jar"/>
		<jar destfile="dist/teleop.jar" basedir="build" index="true">
			<manifest>
				<attribute name="Main-Class" value="pt.up.fe.dceg.neptus.teleop.TeleoperationApp"/>
			</manifest>
		</jar>
		<echo message="The file 'dist/teleop.jar' was generated"/>
	</target>
	
	<target name="compile-teleop" depends="compile">
		<mkdir dir="build"/>
		<javac encoding="UTF-8" debug="true" srcdir="src-teleop" destdir="build" target="1.5" source="1.5" includes="**/*.java" fork="false">      
		</javac>
	</target>	
	
	<target name="compile-kraken" depends="compile">
		<mkdir dir="build"/>
		<javac encoding="UTF-8" debug="true" srcdir="src-scripting" destdir="build" target="1.5" source="1.5" includes="**/*.java" fork="false" classpath="lib/js.jar">      
		</javac>
	</target>
	
	<target name="copysrc" depends="compile">
		<copy todir="build">
			<fileset dir="src" includes="**/*.java"/>
		</copy>
	</target>
	
	<target name="copylicense" depends="compile">
		<copy todir="build">
			<fileset dir="." includes="COPYRIGHT.TXT"/>
		</copy>
	</target>
	
	<target name="copygenerated" depends="compile">
		<copy todir="build">
			<fileset dir="src-generated" includes="**/*.java"/>
		</copy>
	</target>

	
	<target name="jar-stripped" depends="scminfo,compile,copylicense">
		<jar destfile="dist/imc-${scm.tag}.jar" basedir="build" index="true" />				   
		<echo message="The file 'dist/imc-${scm.tag}.jar' was generated"/>
	</target>
	
	<target name="jar-source" depends="scminfo,compile,copysrc,copylicense,copygenerated">
		<jar destfile="dist/imc-src-${scm.tag}.jar" basedir="build" index="true" />				   
		<echo message="The file 'dist/imc-src-${scm.tag}.jar' was generated"/>
	</target>
	
	<target name="jar-full" depends="scminfo,compile-all,copysrc,copylicense,copygenerated">
		<unjar src="lib/jchart2d-3.2.0.jar" dest="build"/>
		<unjar src="lib/js.jar" dest="build"/>
		<unjar src="lib/guava-13.0.1.jar" dest="build"/>
		<unjar src="lib/commons-io-2.0.1.jar" dest="build"/>
		<unjar src="lib/commons-lang3-3.1.jar" dest="build"/>
		<jar destfile="dist/imc-full-${scm.tag}.jar" basedir="build" index="true" />				   
		<echo message="The file 'dist/imc-full-${scm.tag}.jar' was generated"/>
	</target>
		
	<target name="dist" depends="jar-stripped,jar-source,jar-full"
		description="Compile and create jar packages (default target)" />
	
	<target name="update-msg-defs" description="Update message definitions from SVN">
		
		<input 
			message="Select source SVN repository" 
			validargs="dune/trunk/etc/xml,messages/trunk,messages/tags/IMC-v5.1.0-rc1"
			defaultvalue="dune/trunk/etc/xml"
			addproperty="svn.repo">
		</input>
		
		<exec executable="svn" dir="./src/msgdefs">
			<arg value="export"/>
			<arg value="--non-interactive"/>
			<arg value="--force"/>
			<arg value="https://whale.fe.up.pt/svn/${svn.repo}/IMC.xml"/>		
		</exec>
		
		<exec executable="svn" dir="./src/msgdefs">
			<arg value="export"/>
			<arg value="--non-interactive"/>
			<arg value="--force"/>
			<arg value="https://whale.fe.up.pt/svn/messages/trunk/IMC_Addresses.xml"/>
		</exec>

		<exec executable="svn">
			<arg value="info"/>
			<arg value="--non-interactive"/>
			<arg value="https://whale.fe.up.pt/svn/${svn.repo}/"/>
		</exec>
		
	</target>
	
	<target name="svn-commit"> 
		<exec executable="svn" dir=".">
			<arg value="ci"/>
			<arg value="--non-interactive"/>
			<arg value="-m"/>
			<arg value="Message definitions updated."/>
		</exec>
	</target>
	
	<target name="send-to-neptus" depends="svninfo" 
		description="Commit jar and message definitions to Neptus SVN.">
		
		<exec executable="svnmucc" dir="./src/msgdefs">
			<arg value="put"/>
			<arg value="--non-interactive"/>
			<arg value="-m"/>
			<arg value="Automated commit from IMCJava (rev. ${svn.revision})."/>
			<arg value="IMC.xml"/>			
			<arg value="https://whale.fe.up.pt/svn/neptus/trunk/conf/messages/IMC.xml"/>
		</exec>		
		
		<exec executable="svnmucc" dir="./dist">
			<arg value="put"/>
			<arg value="--non-interactive"/>
			<arg value="-m"/>
			<arg value="Automated commit from IMCJava (rev. ${svn.revision})."/>
			<arg value="imc-src-r${svn.revision}.jar"/>
			<arg value="https://whale.fe.up.pt/svn/neptus/trunk/lib/libimc.jar"/>
		</exec>		
	</target>		
	
	<target name="generated" description="Generate message classes from existing IMC.xml definition">
		<antcall target="compile"/>
		<javac encoding="UTF-8" classpath="lib/commons-lang3-3.1.jar" srcdir="src-generator"  destdir="build" target="1.5" source="1.5" includes="**/*.java" fork="false" />
		<delete>
			<fileset dir="src-generated/pt/up/fe/dceg/neptus/imc/">
				<include name="*.java"/>
			</fileset>
		</delete>
		<java classname="pt.up.fe.dceg.neptus.imc.generator.ClassGenerator" args="src/msgdefs/IMC.xml" classpath="build;lib/commons-lang3-3.1.jar" />
	</target>
	
    <target name="javadoc" description="Create javadoc documentation">
	    <javadoc charset="UTF-8" encoding="UTF-8" access="public" author="true" classpath="lib/guava-13.0.1.jar:lib/commons-lang3-3.1.jar:lib/js.jar:lib/jchart2d-3.2.0.jar:lib/commons-lang3-3.1.jar:lib/commons-io-2.0.1.jar" destdir="doc" doctitle="IMCJava API" nodeprecated="false" nodeprecatedlist="false" noindex="false" nonavbar="false" notree="false" packagenames="pt.up.fe.dceg.neptus.imc,pt.up.fe.dceg.neptus.colormap,pt.up.fe.dceg.neptus.messages,pt.up.fe.dceg.neptus.imc.llf,pt.up.fe.dceg.neptus.imc.merge,pt.up.fe.dceg.neptus.imc.generator,pt.up.fe.dceg.neptus.imc.scripting,pt.up.fe.dceg.neptus.imc.gz,pt.up.fe.dceg.neptus.imc.state,pt.up.fe.dceg.neptus.imc.net,pt.up.fe.dceg.neptus.imc.dot,pt.up.fe.dceg.neptus.imc.examples,pt.up.fe.dceg.neptus.imc.inspector,pt.up.fe.dceg.neptus.imc.lsf,pt.up.fe.dceg.neptus.imc.sniffer,pt.up.fe.dceg.neptus.imc.preview,pt.up.fe.dceg.neptus.messages.listener" source="1.6"  sourcepath="src-generated:src-generator:lsf-preview:src-sniffer:src-merge:src-scripting:src:src-bathymetry:src-generated:src-examples" splitindex="true" use="true" version="true"/>
	</target>    
	

</project>